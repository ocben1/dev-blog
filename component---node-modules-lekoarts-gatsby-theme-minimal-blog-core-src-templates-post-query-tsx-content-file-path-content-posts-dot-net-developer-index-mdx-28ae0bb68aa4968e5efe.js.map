{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-dot-net-developer-index-mdx-28ae0bb68aa4968e5efe.js","mappings":"kNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,OAAQ,SACRC,GAAI,KACJC,EAAG,IACHC,IAAK,MACLC,KAAM,SACLC,EAAAA,EAAAA,MAAsBV,EAAMW,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,yMAA8MQ,EAAAA,cAAoBX,EAAYI,OAAQ,KAAM,OAAQ,wKAAyK,KAAMO,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,6BAA8B,KAAMM,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,uUAAwU,KAAMQ,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,6VAA8V,KAAMQ,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,gCAAiC,KAAMM,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,uIAAwI,KAAMQ,EAAAA,cAAoBX,EAAYG,EAAG,KAAMQ,EAAAA,cAAoBX,EAAYI,OAAQ,KAAM,gCAAiC,KAAMO,EAAAA,cAAoBX,EAAYG,EAAG,KAAMQ,EAAAA,cAAoBX,EAAYM,EAAG,CAC/yDM,KAAM,kDACLD,EAAAA,cAAoBX,EAAYI,OAAQ,KAAM,YAAa,kEAAmEO,EAAAA,cAAoBX,EAAYI,OAAQ,KAAM,oBAAqB,0HAA2H,KAAMO,EAAAA,cAAoBX,EAAYO,IAAK,KAAMI,EAAAA,cAAoBX,EAAYQ,KAAM,CACpZK,UAAW,mBACV,gdAAmd,KAAMF,EAAAA,cAAoBX,EAAYG,EAAG,KAAMQ,EAAAA,cAAoBX,EAAYI,OAAQ,KAAM,sCAAuC,KAAMO,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,kBAAmBQ,EAAAA,cAAoBX,EAAYI,OAAQ,KAAM,gCAAiC,mCAAoCO,EAAAA,cAAoBX,EAAYM,EAAG,CAChzBM,KAAM,8DACLD,EAAAA,cAAoBX,EAAYI,OAAQ,KAAM,iBAAkB,OAAQO,EAAAA,cAAoBX,EAAYI,OAAQ,KAAM,aAAc,8DAA+D,KAAMO,EAAAA,cAAoBX,EAAYO,IAAK,KAAMI,EAAAA,cAAoBX,EAAYQ,KAAM,CAC3RK,UAAW,mBACV,2cAAgd,KAAMF,EAAAA,cAAoBX,EAAYG,EAAG,KAAMQ,EAAAA,cAAoBX,EAAYI,OAAQ,KAAM,2CAA4C,KAAMO,EAAAA,cAAoBX,EAAYG,EAAG,KAAMQ,EAAAA,cAAoBX,EAAYM,EAAG,CAC5qBM,KAAM,mDACLD,EAAAA,cAAoBX,EAAYI,OAAQ,KAAM,YAAa,qCAAsCO,EAAAA,cAAoBX,EAAYI,OAAQ,KAAM,8BAA+B,kEAAmE,KAAMO,EAAAA,cAAoBX,EAAYO,IAAK,KAAMI,EAAAA,cAAoBX,EAAYQ,KAAM,CACzUK,UAAW,mBACV,kZAA2Z,KAAMF,EAAAA,cAAoBX,EAAYG,EAAG,KAAMQ,EAAAA,cAAoBX,EAAYI,OAAQ,KAAM,6BAA8B,2BAC3hB,CAKA,MAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOe,QAASC,GAAad,OAAOC,OAAO,CAAC,GAAGO,EAAAA,EAAAA,MAAsBV,EAAMW,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWhB,EAAOY,EAAAA,cAAoBb,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCzBe,SAASiB,EAAiBjB,GACvC,OAAOY,EAAAA,cAAoBM,EAAAA,EAAelB,EAAOY,EAAAA,cAAoBO,EAAqBnB,GAC5F,CAHAkB,EAAAA,C","sources":["webpack://minimal-blog/./content/posts/dot-net-developer/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    h2: \"h2\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"So many job advertisements with the headline \\\"Now Hiring: .NET Developer\\\". Unsurprisingly, they all have the same thing in common: \\\"Required skills: Experience with .NET framework\\\". Surprisingly, a \", React.createElement(_components.strong, null, \"lot\"), \" of them tell you almost nothing else. So what is .NET? Without applying for the role, how do you know what the organization is working on, or if you're a good fit?\"), \"\\n\", React.createElement(_components.h2, null, \"What is a .NET Developer?\"), \"\\n\", React.createElement(_components.p, null, \"A .NET developer is a software engineer who specializes in building applications using the Microsoft .NET framework. The .NET framework is a powerful and versatile platform that allows developers to create a wide range of applications, from desktop applications and web applications to mobile apps and cloud-based services.\"), \"\\n\", React.createElement(_components.p, null, \".NET developers leverage various programming languages like C#, F#, and VB.NET to create software solutions that meet specific business or user needs. They work with a comprehensive set of libraries and tools provided by Microsoft to streamline the development process and ensure the security, performance, and reliability of their applications.\"), \"\\n\", React.createElement(_components.h2, null, \"Exploring the .NET Ecosystem\"), \"\\n\", React.createElement(_components.p, null, \"The .NET ecosystem is vast, encompassing a variety of technologies and platforms. .NET developers could find themselves working on:\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"ASP.NET for Web Development\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://dotnet.microsoft.com/en-us/apps/aspnet\"\n  }, React.createElement(_components.strong, null, \"ASP.NET\")), \" is a popular framework within the .NET ecosystem for building \", React.createElement(_components.strong, null, \"web applications\"), \". Let's take a look at a simple C# code snippet that demonstrates how to create a basic web application using ASP.NET:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-csharp\"\n  }, \"using System;\\nusing Microsoft.AspNetCore.Builder;\\nusing Microsoft.AspNetCore.Hosting;\\nusing Microsoft.AspNetCore.Http;\\nusing Microsoft.Extensions.DependencyInjection;\\n\\nnamespace MyWebApp\\n{\\n    public class Startup\\n    {\\n        public void Configure(IApplicationBuilder app)\\n        {\\n            app.Run(async (context) =>\\n            {\\n                await context.Response.WriteAsync(\\\"Hello, World!\\\");\\n            });\\n        }\\n    }\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"WinForms for Desktop Applications\")), \"\\n\", React.createElement(_components.p, null, \"For developing \", React.createElement(_components.strong, null, \"Windows desktop applications\"), \", .NET developers often turn to \", React.createElement(_components.a, {\n    href: \"https://learn.microsoft.com/en-us/dotnet/desktop/winforms/\"\n  }, React.createElement(_components.strong, null, \"Windows Forms\"), \" or \", React.createElement(_components.strong, null, \"WinForms\")), \". Here's a simple example of a WinForms application in C#:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-csharp\"\n  }, \"using System;\\nusing System.Windows.Forms;\\n\\npublic class MyForm : Form\\n{\\n    public MyForm()\\n    {\\n        Button myButton = new Button();\\n        myButton.Text = \\\"Click Me!\\\";\\n        myButton.Click += (sender, e) => MessageBox.Show(\\\"Button clicked!\\\");\\n\\n        Controls.Add(myButton);\\n    }\\n\\n    [STAThread]\\n    public static void Main()\\n    {\\n        Application.EnableVisualStyles();\\n        Application.Run(new MyForm());\\n    }\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Xamarin for Cross-Platform Mobile Apps\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://dotnet.microsoft.com/en-us/apps/xamarin\"\n  }, React.createElement(_components.strong, null, \"Xamarin\")), \" allows .NET developers to create \", React.createElement(_components.strong, null, \"cross-platform mobile apps\"), \" using C#. Here's a snippet showcasing a Xamarin.Forms button:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-csharp\"\n  }, \"using Xamarin.Forms;\\n\\npublic class MainPage : ContentPage\\n{\\n    public MainPage()\\n    {\\n        Button myButton = new Button\\n        {\\n            Text = \\\"Click Me!\\\"\\n        };\\n\\n        myButton.Clicked += (sender, e) => DisplayAlert(\\\"Button Clicked\\\", \\\"Hello, Xamarin!\\\", \\\"OK\\\");\\n\\n        Content = new StackLayout\\n        {\\n            Children = { myButton }\\n        };\\n    }\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Are you a .NET developer?\"), \" Leave a comment below.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/olibyte.github.io/olibyte.github.io/content/posts/dot-net-developer/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","strong","h2","a","pre","code","_provideComponents","components","React","href","className","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}