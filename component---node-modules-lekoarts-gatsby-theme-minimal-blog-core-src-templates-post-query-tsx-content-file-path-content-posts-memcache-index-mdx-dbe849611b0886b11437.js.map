{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-memcache-index-mdx-dbe849611b0886b11437.js","mappings":"iNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,OAAQ,SACRC,GAAI,OACHC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoB,SAAU,CAC7EC,MAAO,MACPC,OAAQ,MACRC,IAAK,gEACLC,MAAO,uBACPC,YAAa,IACbC,MAAO,sGACPC,iBAAiB,IACf,KAAMP,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,mbAAob,KAAMS,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,iPAAkP,KAAMS,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,0VAA2V,KAAMS,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,4JAA6J,KAAMS,EAAAA,cAAoBZ,EAAYI,GAAI,KAAM,mBAAoB,KAAMQ,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,iIAAkI,KAAMS,EAAAA,cAAoBZ,EAAYK,GAAI,KAAM,KAAMO,EAAAA,cAAoBZ,EAAYM,GAAI,KAAMM,EAAAA,cAAoBZ,EAAYO,EAAG,CACptDa,KAAM,qBACLR,EAAAA,cAAoBZ,EAAYQ,OAAQ,KAAM,UAAW,kMAAmM,KAAMI,EAAAA,cAAoBZ,EAAYM,GAAI,KAAMM,EAAAA,cAAoBZ,EAAYO,EAAG,CAChVa,KAAM,6BACLR,EAAAA,cAAoBZ,EAAYQ,OAAQ,KAAM,iBAAkB,gKAAiK,KAAMI,EAAAA,cAAoBZ,EAAYM,GAAI,KAAMM,EAAAA,cAAoBZ,EAAYO,EAAG,CACrTa,KAAM,0BACLR,EAAAA,cAAoBZ,EAAYQ,OAAQ,KAAM,cAAe,uJAAwJ,KAAMI,EAAAA,cAAoBZ,EAAYM,GAAI,KAAMM,EAAAA,cAAoBZ,EAAYO,EAAG,CACzSa,KAAM,8BACLR,EAAAA,cAAoBZ,EAAYQ,OAAQ,KAAM,cAAe,yIAA0I,MAAO,KAAMI,EAAAA,cAAoBZ,EAAYI,GAAI,KAAM,iCAAkC,KAAMQ,EAAAA,cAAoBZ,EAAYG,EAAG,KAAMS,EAAAA,cAAoBZ,EAAYO,EAAG,CACnXa,KAAM,sCACLR,EAAAA,cAAoBZ,EAAYQ,OAAQ,KAAM,aAAc,eAAgBI,EAAAA,cAAoBZ,EAAYQ,OAAQ,KAAM,KAAM,YAAaI,EAAAA,cAAoBZ,EAAYQ,OAAQ,KAAM,KAAM,cAAeI,EAAAA,cAAoBZ,EAAYQ,OAAQ,KAAM,SAAU,yIAA0I,KAAMI,EAAAA,cAAoBZ,EAAYK,GAAI,KAAM,KAAMO,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,gHAAiH,KAAMM,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,iFAAkF,KAAMM,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,kgBAAmgBM,EAAAA,cAAoBZ,EAAYO,EAAG,CAC5zCa,KAAM,sCACLR,EAAAA,cAAoBZ,EAAYQ,OAAQ,KAAM,YAAa,MAAOI,EAAAA,cAAoBZ,EAAYO,EAAG,CACtGa,KAAM,0CACLR,EAAAA,cAAoBZ,EAAYQ,OAAQ,KAAM,aAAc,WAAY,MAAO,KAAMI,EAAAA,cAAoB,SAAU,CACpHC,MAAO,MACPC,OAAQ,MACRC,IAAK,gEACLC,MAAO,uBACPC,YAAa,IACbC,MAAO,sGACPC,iBAAiB,IACf,KAAMP,EAAAA,cAAoBZ,EAAYI,GAAI,KAAM,2BAA4B,KAAMQ,EAAAA,cAAoBZ,EAAYG,EAAG,KAAMS,EAAAA,cAAoBZ,EAAYO,EAAG,CAChKa,KAAM,kGACL,0DAA2DR,EAAAA,cAAoBZ,EAAYS,IAAK,KAAMG,EAAAA,cAAoBZ,EAAYO,EAAG,CAC1Ia,KAAM,yFACL,iDAAkDR,EAAAA,cAAoBZ,EAAYS,IAAK,KAAMG,EAAAA,cAAoBZ,EAAYO,EAAG,CACjIa,KAAM,6GACL,+DACL,CAKA,MAJA,SAAoBrB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOsB,QAASC,GAAarB,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOW,EAAYV,EAAAA,cAAoBU,EAAWvB,EAAOa,EAAAA,cAAoBd,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UClDe,SAASwB,EAAiBxB,GACvC,OAAOa,EAAAA,cAAoBY,EAAAA,EAAezB,EAAOa,EAAAA,cAAoBa,EAAqB1B,GAC5F,CAHAyB,EAAAA,C","sources":["webpack://minimal-blog/./content/posts/memcache/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h4: \"h4\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    strong: \"strong\",\n    br: \"br\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(\"iframe\", {\n    width: \"560\",\n    height: \"315\",\n    src: \"https://www.youtube.com/embed/UH7wkvcf0ys?si=dnH1tbsqmctIKdbT\",\n    title: \"YouTube video player\",\n    frameborder: \"0\",\n    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\",\n    allowfullscreen: true\n  }), \"\\n\", React.createElement(_components.p, null, \"In 2008 Facebook witnessed not only Mark Zuckerberg's cringe-worthy 60 minutes interview, but a significant turning point in its history. Facebook was experiencing explosive growth. With millions of users joining the platform every month, the demand for fast and efficient data access was paramount. Traditional methods of database queries were no longer sufficient to keep up with the rapidly increasing user base and data volume.\"), \"\\n\", React.createElement(_components.p, null, \"Facebook had begun leveraging Memcached, an open-source, high-performance, distributed memory caching system. Developed by Brad Fitzpatrick in 2003, Memcached had already gained popularity among web giants like LiveJournal and Wikipedia.\"), \"\\n\", React.createElement(_components.p, null, \"Memcached essentially acted as a caching layer between Facebook's web servers and its database. It stored frequently accessed data in memory, eliminating the need to repeatedly query the database for the same information. This not only reduced the load on the database servers but also significantly improved response times for user requests.\"), \"\\n\", React.createElement(_components.p, null, \"Memcached allowed them to scale horizontally - adding more caching servers as needed, ensuring that the system could handle the ever-increasing traffic.\"), \"\\n\", React.createElement(_components.h4, null, \"Memcached Today\"), \"\\n\", React.createElement(_components.p, null, \"Memcached arguably laid the foundation for the development and adoption of other cutting-edge technologies and architectures:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://redis.io/\"\n  }, React.createElement(_components.strong, null, \"Redis\")), \" a highly versatile, open-source, in-memory data store that is often used for caching. It offers not only caching capabilities but also supports data structures, pub/sub messaging, and more.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://kafka.apache.org/\"\n  }, React.createElement(_components.strong, null, \"Apache Kafka\")), \", a distributed streaming platform that can be used for caching, especially in scenarios where real-time data processing and stream processing are required.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://hazelcast.com/\"\n  }, React.createElement(_components.strong, null, \"Hazelcast\")), \", an open-source, in-memory data grid platform that offers distributed caching capabilities. It can be used for both caching and data distribution.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.couchbase.com/\"\n  }, React.createElement(_components.strong, null, \"Couchbase\")), \", a NoSQL database that includes a caching layer. It's suitable for applications that require both caching and database capabilities.\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, null, \"Use case: EVCache and Netflix\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://netflix.github.io/EVCache/\"\n  }, React.createElement(_components.strong, null, \"EV Cache\")), \" stands for \", React.createElement(_components.strong, null, \"E\"), \"phemeral \", React.createElement(_components.strong, null, \"V\"), \"olatile mem\", React.createElement(_components.strong, null, \"Cache\"), \" - a memcached & spymemcached based caching solution that is mainly used for AWS EC2 infrastructure for caching frequently used data.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Ephemeral : It is intended to store transient data that can disappear as specified by its TTL (Time To Live)\"), \"\\n\", React.createElement(_components.li, null, \"Volatile : In-Memory key-value store where data (strings, objects) can change\"), \"\\n\", React.createElement(_components.li, null, \"Cache : Uses memcached & in some cases backed by RocksDB\\nBased on memcached, it is a Tier-0 system at Netflix with its footprint across ~18,000 servers holding ~14 petabytes of data (at the time of writing). EVCache is comprised of thousands of nodes in production and hundreds of clusters all of which must routinely scale up due to the increasing growth of members.\\nJust like Facebook back in the day, it serves multiple use cases from signup, personalization, searching, playback, and more.\\nCheck out the \", React.createElement(_components.a, {\n    href: \"https://github.com/Netflix/EVCache\"\n  }, React.createElement(_components.strong, null, \"EVCache\")), \" & \", React.createElement(_components.a, {\n    href: \"https://github.com/memcached/memcached\"\n  }, React.createElement(_components.strong, null, \"memached\")), \" repos.\"), \"\\n\"), \"\\n\", React.createElement(\"iframe\", {\n    width: \"560\",\n    height: \"315\",\n    src: \"https://www.youtube.com/embed/m4_7W4XzRgk?si=eFzxUxiOL_-ajaQG\",\n    title: \"YouTube video player\",\n    frameborder: \"0\",\n    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\",\n    allowfullscreen: true\n  }), \"\\n\", React.createElement(_components.h4, null, \"Read more about EVCache\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://netflixtechblog.com/evolution-of-application-data-caching-from-ram-to-ssd-a33d6fa7a690\"\n  }, \"Evolution of Application Data Caching: From RAM to SSD\"), React.createElement(_components.br), \"\\n\", React.createElement(_components.a, {\n    href: \"https://netflixtechblog.com/cache-warming-agility-for-a-stateful-service-2d3b1da82642\"\n  }, \"Cache warming: Agility for a stateful service\"), React.createElement(_components.br), \"\\n\", React.createElement(_components.a, {\n    href: \"https://netflixtechblog.medium.com/cache-warming-leveraging-ebs-for-moving-petabytes-of-data-adcf7a4a78c3\"\n  }, \"Cache warming: Leveraging EBS for moving petabytes of data\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/olibyte.github.io/olibyte.github.io/content/posts/memcache/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h4","ul","li","a","strong","br","_provideComponents","components","React","width","height","src","title","frameborder","allow","allowfullscreen","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}