{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-star-1-index-mdx-b8a51538d345430dc9cc.js","mappings":"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","sources":["webpack://minimal-blog/./content/posts/star-1/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    br: \"br\",\n    h2: \"h2\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"The STAR response is a structured and effective method for answering behavioral interview questions. It stands for \", React.createElement(_components.strong, null, React.createElement(_components.strong, null, \"S\")), \"ituation, \", React.createElement(_components.strong, null, React.createElement(_components.strong, null, \"T\")), \"ask, \", React.createElement(_components.strong, null, React.createElement(_components.strong, null, \"A\")), \"ction, \", React.createElement(_components.strong, null, React.createElement(_components.strong, null, \"R\")), \"esult. Using this format allows you to provide a concise and structured account of your past experiences, showcasing your communication skills (usually the point of the behavioural interview) and how you go about solving problems.\", React.createElement(_components.br), \"\\n\", \"Try building your response around a \\\"\", React.createElement(_components.strong, null, \"war story\"), \"\\\" - a specific example where you ended up being the hero. The keywords act as \\\"sign-posts\\\" so you and your interviewer don't get lost in the story.\", React.createElement(_components.br), \"\\n\", \"Don't be shy - take credit for your achievement. However, \", React.createElement(_components.strong, null, React.createElement(_components.strong, null, \"never\")), \" speak negatively of a colleague when explicating a problem that you happened to solve - it's a red-flag you could be a bad culture fit.\"), \"\\n\", React.createElement(_components.h2, null, \"Interviewer: What kind of approach do you take to solving problems?\"), \"\\n\", React.createElement(_components.h3, null, \"I pride myself on taking a systematic and collaborative approach to solving problems. For example...\"), \"\\n\", React.createElement(_components.h3, null, \"Situation:\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"I found myself in a situation\"), \" where many instructors enrolled in our Learning Management System (Canvas) were contacting our unit reporting that after submissions had been received for an assignment, the submission type couldn't be updated. Users could select different options for the submission type, but these changes weren't retained when the page was saved. This issue was causing frustration and workflow disruptions for our users, particularly instructors who needed to update the rules and requirements of their course assignments.\"), \"\\n\", React.createElement(_components.h3, null, \"Task:\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"My task\"), \" was to develop a fix using JavaScript to allow the updating of submission types in an assignment even after submissions had been received. The objective was to ensure that users could select and retain different submission types as needed, providing a seamless user experience.\"), \"\\n\", React.createElement(_components.h3, null, \"Action:\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Investigation\"), React.createElement(_components.br), \"\\n\", React.createElement(_components.strong, null, \"My first action\"), \" involved thoroughly investigating the codebase related to assignment submissions and submission types within Canvas LMS. This involved understanding the existing code and identifying the specific code paths responsible for handling submission type updates.\", React.createElement(_components.br), \"\\n\", React.createElement(_components.strong, null, \"Code Analysis\"), React.createElement(_components.br), \"\\n\", \"After pinpointing the relevant code sections, I examined how submission type changes were being processed and stored in the system. I identified that the code lacked proper handling for updating submission types post-submission.\", React.createElement(_components.br), \"\\n\", React.createElement(_components.strong, null, \"Code Refactoring\"), React.createElement(_components.br), \"\\n\", \"To address the issue, I initiated a code refactoring process. I modified the code responsible for submission type updates to include logic that allowed changes to be saved and retained, even after submissions had been received.\", React.createElement(_components.br), \"\\n\", React.createElement(_components.strong, null, \"User Interface Enhancements\"), React.createElement(_components.br), \"\\n\", \"The fix required adjustments to the user interface as well. I made the necessary changes to the assignment editing interface to ensure that users could select, update, and save different submission types with ease.\", React.createElement(_components.br), \"\\n\", React.createElement(_components.strong, null, \"Unit Testing\"), React.createElement(_components.br), \"\\n\", \"To validate the correctness of the code changes, I created comprehensive unit tests using Jest. These tests covered various scenarios and edge cases to confirm that the refactored assignment type logic produced accurate results.\", React.createElement(_components.br), \"\\n\", React.createElement(_components.strong, null, \"End-to-End Testing\"), React.createElement(_components.br), \"\\n\", \"I also integrated end-to-end tests using Selenium WebDriver to simulate real user interactions with the Canvas LMS. These tests aimed to verify that the bug was fully resolved and didn't introduce any new issues in the user interface.\"), \"\\n\", React.createElement(_components.h3, null, \"Result:\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"As a result\"), \" my team lead was thrilled and highlighted the new benefits of this fix:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Submission Type Updates\"), React.createElement(_components.br), \"\\n\", \"Users could now update submission types for assignments even after submissions had been received. This provided flexibility and met user expectations, as they could adapt to changing requirements or situations.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Enhanced User Experience\"), React.createElement(_components.br), \"\\n\", \"The fix resulted in an improved user experience within the LMS. Users no longer encountered frustration when trying to modify submission types, contributing to higher user satisfaction.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Code Quality\"), React.createElement(_components.br), \"\\n\", \"The code refactoring and enhancements improved the maintainability and quality of the LMS codebase. It also adhered to best practices, making it easier for future development and updates.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Testing & Quality Assurance\"), React.createElement(_components.br), \"\\n\", \"Extensive testing, including unit testing and end-to-end testing, was conducted to ensure that the fix didn't introduce regressions or new issues. This thorough testing process helped guarantee the stability of the Canvas LMS.  The unit tests and end-to-end tests I developed ensured that the bug fix was thoroughly validated. We also implemented continuous integration in our Jenkins pipeline to automatically run these tests with every code change, further safeguarding against future regressions.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Documentation\"), React.createElement(_components.br), \"\\n\", \"I documented the bug fix thoroughly, outlining the changes made to the codebase and the steps for testing the updated functionality. This documentation served as a valuable resource for the development team and for knowledge sharing within the organization.\", React.createElement(_components.br), \"\\n\", \"In summary, the bug fix successfully addressed a critical issue in Canvas LMS, allowing users to update submission types for assignments after submissions had been received. This demonstrated the effectiveness of systematic troubleshooting, code analysis, and code refactoring to enhance the functionality and user experience of the platform.\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, null, \"When shouldn't I use the STAR method?\"), \"\\n\", React.createElement(_components.p, null, \"You can't STAR every question, though \", React.createElement(_components.strong, null, \"sign-posting\"), \" is still extremely important. For example, your interviewer may want to know more about the \", React.createElement(_components.strong, null, \"Action\"), \" you took.\"), \"\\n\", React.createElement(_components.h2, null, \"Follow-up question: Can you tell us more about the logic you implemented when refactoring the code?\"), \"\\n\", React.createElement(_components.p, null, \"Sure!\", React.createElement(_components.br), \"\\n\", React.createElement(_components.strong, null, \"Identification of Submission Type State\"), React.createElement(_components.br), \"\\n\", \"First, I modified the code to identify the current submission type for the assignment. This information was crucial for determining whether changes were allowed and for comparing the selected submission type with the current one.\", React.createElement(_components.br), \"\\n\", React.createElement(_components.strong, null, \"User Interaction Handling\"), React.createElement(_components.br), \"\\n\", \"When a user attempted to update the submission type for an assignment, I introduced logic to capture their selection and intentions.\", React.createElement(_components.br), \"\\n\", \"If the assignment had no submissions, the logic allowed the user to update the submission type directly without any restrictions. This was because there were no existing submissions to consider.\", React.createElement(_components.br), \"\\n\", \"If there were submissions for the assignment, the logic prompted the user with a confirmation dialog. This dialog informed the user that changing the submission type might impact existing submissions and asked for confirmation to proceed.\", React.createElement(_components.br), \"\\n\", React.createElement(_components.strong, null, \"Handling of Existing Submissions\"), React.createElement(_components.br), \"\\n\", \"If the user confirmed the submission type change, the logic proceeded to update the assignment's submission type.\", React.createElement(_components.br), \"\\n\", \"For assignments with existing submissions, the logic also included a data migration process. It converted the existing submissions to match the newly selected submission type, ensuring data integrity and consistency.\", React.createElement(_components.br), \"\\n\", React.createElement(_components.strong, null, \"Validation and Error Handling\"), React.createElement(_components.br), \"\\n\", \"Robust validation checks were implemented to prevent unauthorized changes or invalid submissions. This included checks to ensure that the user had the necessary permissions to make submission type changes.\", React.createElement(_components.br), \"\\n\", \"If any errors or inconsistencies were encountered during the process, error messages were displayed to the user, guiding them on how to address the issue.\", React.createElement(_components.br), \"\\n\", React.createElement(_components.strong, null, \"User Feedback\"), React.createElement(_components.br), \"\\n\", \"Upon successful submission type updates, the logic provided immediate feedback to the user, confirming that the change had been applied. This feedback reassured users that their requested changes had been successfully processed.\", React.createElement(_components.br), \"\\n\", React.createElement(_components.strong, null, \"Logging and Auditing\"), React.createElement(_components.br), \"\\n\", \"Comprehensive logging and auditing mechanisms were integrated into the code to track submission type changes. This allowed administrators and support teams to monitor and review assignment history.\", React.createElement(_components.br), \"\\n\", React.createElement(_components.strong, null, \"Code Documentation\"), React.createElement(_components.br), \"\\n\", \"Throughout the refactoring process, I documented the code changes extensively. This documentation included inline comments explaining the purpose of the code, the logic used, and the rationale behind specific decisions. Additionally, I updated external documentation to reflect the new functionality.\", React.createElement(_components.br), \"\\n\", React.createElement(_components.strong, null, \"Summary\"), React.createElement(_components.br), \"\\n\", \"The logic implemented during the code refactoring ensured that submission type changes were handled securely and transparently, even for assignments with existing submissions. It considered user permissions, data migration, error handling, and user feedback to create a seamless and reliable user experience within Canvas LMS. This approach not only resolved the bug but also improved the overall functionality and maintainability of the system.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/olibyte.github.io/olibyte.github.io/content/posts/star-1/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","strong","br","h2","h3","ul","li","h4","_provideComponents","components","React","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}