{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-stochastic-index-mdx-adfddf99b8fae0e603bc.js","mappings":"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","sources":["webpack://minimal-blog/./content/posts/stochastic/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nexport function Thing() {\n  return React.createElement(React.Fragment, null, \"World\");\n}\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    strong: \"strong\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Hello \", React.createElement(Thing)), \"\\n\", React.createElement(_components.p, null, \"tldr;\\nread [press release] Quantitative Finance with Python: A Practical Guide to Investment Management, Trading, and Financial Engineering by Chris Kelliher and your head will explode too\\n\", React.createElement(_components.a, {\n    href: \"/quantitative-finance-with-python-a-practical-guide-to-investment-management-trading-and-financial-engineering-2021056941-2021056942-9781032014432-9781032019147-9781003180975_compress.pdf\"\n  }, \"Click here to download the PDF\")), \"\\n\", React.createElement(_components.p, null, \"My new hobby is trading stocks and cryptocurrency - I fancy myself as a half-decent python programmer, so why not do something useful with it?\\nI'm deep down the rabbit-hole now at Stochastic Differential Equations - a far cry from today's DevOps BAU.\\nPrior to fumbling my way through Yves Hilpisch, Ernest P. Chan & Sofien Kaabar, my only reference to the word \\\"stochastic\\\" was a very obscure line from Season 6 of The Simpsons:\"), \"\\n\", React.createElement(\"iframe\", {\n    width: \"560\",\n    height: \"315\",\n    src: \"https://www.youtube.com/embed/y2gy-fLjCTY?si=_3qXDQiJCkKTHLdk\",\n    title: \"YouTube video player\",\n    frameborder: \"0\",\n    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\",\n    allowfullscreen: true\n  }), \"\\n\", React.createElement(_components.p, null, \"So what does \\\"Stochastic\\\" mean?\"), \"\\n\", React.createElement(_components.p, null, \"\\\"Stochastic\\\" refers to a process that involves a random or probabilistic element. In the context of stochastic processes, randomness is an inherent part of the evolution of the system over time. Stochastic models are used to represent systems where uncertainty, variability, or randomness plays a significant role.\"), \"\\n\", React.createElement(_components.p, null, \"In finance, stochastic processes are commonly employed to model the behavior of financial instruments and markets. Here are a few key ways in which stochastic processes are used in finance:\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Stock Price Modeling:\"), \" Stochastic processes are frequently used to model the movement of stock prices. One of the most well-known stochastic processes for this purpose is the Geometric Brownian Motion (GBM), which incorporates a random component to simulate the unpredictable nature of stock price movements.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Option Pricing:\"), \" Stochastic calculus, a branch of mathematics that deals with processes evolving over time with a random component, is used extensively in the pricing of financial derivatives, such as options. The Black-Scholes-Merton model, a widely used option pricing model, employs stochastic calculus.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Interest Rate Models:\"), \" Stochastic models are used to describe and predict changes in interest rates. These models are crucial in the valuation of fixed-income securities, including bonds.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Risk Management:\"), \" Stochastic models are applied in risk management to assess the uncertainty and variability of financial portfolios. Monte Carlo simulation, a stochastic modeling technique, is often used to simulate various future scenarios and assess the risk associated with different outcomes.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Econometric Models:\"), \" Stochastic processes are used in econometrics to model economic variables and financial time series. These models help economists and analysts understand and predict economic trends and behaviors.\"), \"\\n\", React.createElement(_components.p, null, \"Stochastic RSI\"), \"\\n\", React.createElement(_components.p, null, \"The Stochastic Relative Strength Index (Stochastic RSI) is a technical indicator that combines elements of two popular indicators: the Relative Strength Index (RSI) and the Stochastic Oscillator. It is used to identify overbought and oversold conditions in a market.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Calculate the RSI:\"), \" Compute the standard RSI for a given period, which measures the relative strength of the price compared to its own past performance.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Apply the Stochastic Oscillator Formula to the RSI:\"), \" Use the Stochastic Oscillator formula on the RSI values calculated in step 1. The Stochastic Oscillator involves two lines, %K and %D.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"%K (Stochastic RSI): Represents the current value of the RSI in relation to its range over a specified period.\"), \"\\n\", React.createElement(_components.li, null, \"%D (Signal Line): A moving average of %K, often a 3-period simple moving average (SMA) of %K.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"The formula for %K is usually given by:\\n$a^2 + b^2 = c^2$\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-math\"\n  }, \"\\\\[ \\\\%K = \\\\frac{{\\\\text{{Current RSI Value}} - \\\\text{{RSI Minimum Value over the Period}}}}{{\\\\text{{RSI Maximum Value over the Period}} - \\\\text{{RSI Minimum Value over the Period}}}} \\\\times 100 \\\\]\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Smooth the %K Line:\"), \" Apply a moving average (commonly a 3-period SMA) to the %K line to generate the %D line.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"import pandas as pd\\nimport numpy as np\\n\\ndef calculate_rsi(df, column_name='Close', rsi_period=14):\\n    # Step 1: Calculate RSI\\n    df['rsi'] = df[column_name].diff(1)\\n    df['rsi_gain'] = np.where(df['rsi'] > 0, df['rsi'], 0)\\n    df['rsi_loss'] = np.where(df['rsi'] < 0, -df['rsi'], 0)\\n\\n    avg_gain = df['rsi_gain'].rolling(window=rsi_period, min_periods=1).mean()\\n    avg_loss = df['rsi_loss'].rolling(window=rsi_period, min_periods=1).mean()\\n\\n    rs = avg_gain / avg_loss\\n    df['rsi'] = 100 - (100 / (1 + rs))\\n\\n    return df\\n\\ndef apply_stochastic_oscillator(df, rsi_column='rsi', stoch_period=14):\\n    # Step 2: Apply Stochastic Oscillator formula to the RSI\\n    df['stoch_rsi'] = (df[rsi_column] - df[rsi_column].rolling(window=stoch_period).min()) / \\\\\\n                      (df[rsi_column].rolling(window=stoch_period).max() - df[rsi_column].rolling(window=stoch_period).min())\\n    \\n    return df\\n\\ndef smooth_stoch_k(df, k_column='stoch_rsi', d_period=3):\\n    # Step 3: Smooth the %K line to get %D\\n    df['stoch_rsi_k'] = df[k_column].rolling(window=d_period).mean()\\n\\n    return df\\n\\n# Example for a DataFrame 'df' with a 'Close' column and a 'datetime' index\\n# df = ...\\n\\n# Step 1: Calculate RSI\\ndf = calculate_rsi(df)\\n\\n# Step 2: Apply Stochastic Oscillator formula to the RSI\\ndf = apply_stochastic_oscillator(df)\\n\\n# Step 3: Smooth the %K line to get %D\\ndf = smooth_stoch_k(df)\\n\\n# Display the resulting DataFrame\\nprint(df[['rsi', 'stoch_rsi', 'stoch_rsi_k']])\\n\")), \"\\n\", React.createElement(_components.p, null, \"The Stochastic RSI generates values between 0 and 100, similar to the regular RSI. Traders and analysts use the Stochastic RSI to identify potential trend reversals or trend continuation opportunities. Readings above 80 are often considered overbought, suggesting a potential reversal to the downside, while readings below 20 are considered oversold, indicating a potential reversal to the upside.\"), \"\\n\", React.createElement(_components.p, null, \"As with any technical indicator, it's essential to use the Stochastic RSI in conjunction with other analysis tools and consider market conditions before making trading decisions.\"), \"\\n\", React.createElement(_components.p, null, \"In addition to the Stochastic RSI, there are other stochastic-based technical indicators that traders and analysts use to assess market conditions and potential price reversals. Here are a few:\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Stochastic Oscillator:\"), \" The classic Stochastic Oscillator measures the current closing price in relation to the high-low range over a specified period. It consists of two lines: %K and %D.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Fast Stochastic Oscillator:\"), \" Similar to the Stochastic Oscillator, the Fast Stochastic uses a shorter time period for %K, making it more responsive to price changes.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Slow Stochastic Oscillator:\"), \" The Slow Stochastic is a smoothed version of the Fast Stochastic, incorporating a moving average to %K, resulting in a slower-reacting indicator.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Full Stochastic Oscillator:\"), \" The Full Stochastic includes a third line, %DS, which is a simple moving average of %D. It provides additional smoothing.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Williams %R:\"), \" Developed by Larry Williams, this oscillator is a momentum indicator that measures overbought and oversold levels. It is essentially a reverse Stochastic Oscillator, with readings ranging from -100 to 0.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Fast %K and Slow %D:\"), \" These are variations of the Stochastic Oscillator, where %K is the fast line, and %D is the slow line, similar to the Fast and Slow Stochastic Oscillators.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Relative Strength Index (RSI):\"), \" While not purely stochastic, the RSI is a momentum oscillator that measures the speed and change of price movements. It is often used in conjunction with stochastic indicators.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Commodity Channel Index (CCI):\"), \" Though not purely stochastic, the CCI measures the statistical variation from the average. It's used to identify overbought and oversold conditions.\"), \"\\n\", React.createElement(_components.p, null, \"Each of these indicators has its own characteristics and strengths. Traders often use a combination of indicators to get a more comprehensive view of market conditions. It's important to note that no single indicator is foolproof, and they should be used in conjunction with other forms of analysis.\"), \"\\n\", React.createElement(_components.p, null, \"Finally, a brief summary on where I'm at with Kelliher's Calculus refresher:\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"SDE (Stochastic Differential Equation):\")), \"\\n\", React.createElement(_components.p, null, \"A Stochastic Differential Equation (SDE) is a type of differential equation that incorporates random noise or stochastic processes. It is often used to model systems where randomness plays a significant role. In finance, SDEs are frequently employed to model the evolution of financial instruments' prices over time. The most common SDE used in finance is the geometric Brownian motion, which is a key component of the Black-Scholes-Merton model for option pricing.\"), \"\\n\", React.createElement(_components.p, null, \"The general form of a one-dimensional SDE is given by:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-math\"\n  }, \"$$\\n\\\\[dX_t = \\\\mu(X_t, t) \\\\, dt + \\\\sigma(X_t, t) \\\\, dW_t\\\\]\\n$$\\n\")), \"\\n\", React.createElement(_components.p, null, \"where:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"(X_t) is the state variable (e.g., asset price),\"), \"\\n\", React.createElement(_components.li, null, \"(\\\\mu(X_t, t)) is the drift term (deterministic component),\"), \"\\n\", React.createElement(_components.li, null, \"(\\\\sigma(X_t, t)) is the diffusion term (stochastic component),\"), \"\\n\", React.createElement(_components.li, null, \"(dW_t) is the Wiener process (Brownian motion).\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"PDE (Partial Differential Equation):\")), \"\\n\", React.createElement(_components.p, null, \"A Partial Differential Equation (PDE) involves partial derivatives with respect to multiple variables. PDEs are used to describe how a quantity evolves over space and time. In finance, PDEs are commonly employed to derive pricing models for complex derivatives and to understand the evolution of financial variables in continuous time and space.\"), \"\\n\", React.createElement(_components.p, null, \"The Black-Scholes equation, which is a PDE, governs the pricing of European-style options and is derived from a geometric Brownian motion SDE. The Black-Scholes PDE is given by:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-math\"\n  }, \"\\\\[\\\\frac{\\\\partial V}{\\\\partial t} + \\\\frac{1}{2} \\\\sigma^2 S^2 \\\\frac{\\\\partial^2 V}{\\\\partial S^2} + rS\\\\frac{\\\\partial V}{\\\\partial S} - rV = 0\\\\]\\n\")), \"\\n\", React.createElement(_components.p, null, \"where:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"(V(S, t)) is the option price as a function of the underlying asset price (S) and time (t),\"), \"\\n\", React.createElement(_components.li, null, \"(\\\\sigma) is the volatility of the asset,\"), \"\\n\", React.createElement(_components.li, null, \"(r) is the risk-free interest rate.\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/olibyte.github.io/olibyte.github.io/content/posts/stochastic/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["Thing","React","_createMdxContent","props","_components","Object","assign","h1","p","a","strong","ol","li","ul","pre","code","_provideComponents","components","href","width","height","src","title","frameborder","allow","allowfullscreen","className","start","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}