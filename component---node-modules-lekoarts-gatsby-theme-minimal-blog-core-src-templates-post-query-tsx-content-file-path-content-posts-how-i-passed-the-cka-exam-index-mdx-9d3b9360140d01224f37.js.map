{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-how-i-passed-the-cka-exam-index-mdx-9d3b9360140d01224f37.js","mappings":"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","sources":["webpack://minimal-blog/./content/posts/how-i-passed-the-cka-exam/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h3: \"h3\",\n    h4: \"h4\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    strong: \"strong\",\n    em: \"em\",\n    ol: \"ol\",\n    code: \"code\",\n    pre: \"pre\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"TLDR? Skip to the exam gotchas.\"), \"\\n\", React.createElement(_components.h3, null, \"Before the exam\"), \"\\n\", React.createElement(_components.h4, null, \"Starting from scratch?\"), \"\\n\", React.createElement(_components.p, null, \"If you're new to Kubernetes, strongly consider a learning path:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/kelseyhightower/kubernetes-the-hard-way\"\n  }, \"Kubernetes The Hard Way\"), \" - for a long time the go-to tutorial for learning how to bootstrap a Kubernetes cluster. At the time of writing, the tutorial runs Kubernetes v1.21, and the exam is based on v1.24.\"), \"\\n\", React.createElement(_components.li, null, \"Purchasing the \", React.createElement(_components.strong, null, \"Kubernetes Fundamentals (LFS258)\"), \" - you can buy this as the companion course in a CKA bundle (I didn't buy this so can't speak to its content or value for money)\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://kodekloud.com/courses/certified-kubernetes-administrator-cka/\"\n  }, \"KodeKloud CKA Certification Course\"), \" - great buy at $20, and while I glossed over the \", React.createElement(_components.strong, null, \"20 hours of videos\"), \", the 3 practice exams and lightning lab alone is great prep. \", React.createElement(_components.em, null, \"Edit: Looks like it might even be free now...\")), \"\\n\"), \"\\n\", React.createElement(_components.h4, null, \"Reps, reps, reps\"), \"\\n\", React.createElement(_components.p, null, \"Candidates who register for the \", React.createElement(_components.a, {\n    href: \"https://training.linuxfoundation.org/certification/certified-kubernetes-administrator-cka/\"\n  }, \"CKA exam\"), \" will have 2 attempts at an exam simulator provided by Killer Shell. Doing a round trip of the \", React.createElement(_components.a, {\n    href: \"https://killer.sh\"\n  }, \"killer.sh\"), \" practice exams and scenarios will set you up for success. The simulators are far more difficult than the actual exam - if you reach a point where you can complete (\", React.createElement(_components.strong, null, \"and fully grasp, not regurgitate\"), \") the exam simulator and bonus tasks with time to spare, you should be ready!\"), \"\\n\", React.createElement(_components.h4, null, \"Watch and learn\"), \"\\n\", React.createElement(_components.p, null, \"I got hooked on \", React.createElement(_components.a, {\n    href: \"https://www.youtube.com/c/Rawkode\"\n  }, \"Rawkode\"), \" Klustered videos - a series of live streams where teams fix \\\"broken\\\" Kubernetes clusters. Watching some of the pros troubleshoot and problem solve really took my understanding of Kubernetes to the next level. If you're after something a little more targeted, \", React.createElement(_components.a, {\n    href: \"https://www.youtube.com/c/AlokKumar-CloudKeFunde\"\n  }, \"Alok Kumar\"), \" walks through a number of CKA sample questions and solutions which I found to be quite helpful.\"), \"\\n\", React.createElement(_components.h4, null, \"Read the documentation (or at least, the important bits)\"), \"\\n\", React.createElement(_components.p, null, \"A colleague of mine read every single page of the documentation cover-to-cover 3 times. Everybody absorbs information differently, and in hindight I wonder how I might have went had I done the same. The goal is not to memorize the information - but should a task pop up that requires you to generate a lengthy snippet or set of commands, knowing where to find nice boilerplate is invaluable. Upgrading kubeadm clusters should require very little brain-power if you have the \", React.createElement(_components.a, {\n    href: \"https://kubernetes.io/docs/tasks/administer-cluster/kubeadm/kubeadm-upgrade/\"\n  }, \"correct documentation\"), \" in front of you. YAML and imperatives for network policies, RBAC and JSONPath often requires a lengthy snippet or 'fiddly' imperative. Knowing where to find an example snippets and/or set of commands you can use as a template is vital. At the very least, memorize what is and isn't on the kubectl Cheat Sheet.\"), \"\\n\", React.createElement(_components.h3, null, \"During the exam\"), \"\\n\", React.createElement(_components.h4, null, \"Relax, and breathe\"), \"\\n\", React.createElement(_components.p, null, \"Things like latency, tunneling and viewport issues will immediately put you at a disadvantage. When tackling a task, ensure you've fully processed the question and have a solid idea of what commands should be run.\"), \"\\n\", React.createElement(_components.h4, null, \"Exam gotchas and remote proctoring\"), \"\\n\", React.createElement(_components.p, null, \"Latency, tunneling and viewport issues with the new proctoring platform PSI Bridge platform have been widely reported - my understanding is PSI has rectified this, but addition to the \", React.createElement(_components.a, {\n    href: \"https://docs.linuxfoundation.org/tc-docs/certification/tips-cka-and-ckad\"\n  }, \"important instructions\"), \" and \", React.createElement(_components.a, {\n    href: \"https://training.linuxfoundation.org/blog/update-on-certification-exam-proctoring-migration/\"\n  }, \"update on proctoring migration\"), \", here are some tips:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"One active monitor only, and if you have something 15\\\" or higher, use it! The PSI browser consumes 100% of your viewport, so the GUI for your remote desktop session will be roughly 66% of your monitor by default (of course, collapsing task instructions can give you more screen real-estate temporarily).\"), \"\\n\", React.createElement(_components.li, null, \"You'll be working with Linux OS, so be sure to know the copy and paste commands. YAML formatting issues have been reported when copying/pasting from the docs to the VIM editor.\"), \"\\n\", React.createElement(_components.li, null, \"Basics like copy, paste, delete, undo, write and quit are all well and good - but advanced commands will make your life easier (and is an invaluable, transferable industry skill). Linux \", React.createElement(_components.code, null, \"cat\"), \" and \", React.createElement(_components.code, null, \"grep\"), \" is fine, but getting comfortable with search and replace commands like \", React.createElement(_components.code, null, \":%s/old/new/g\"), \" and \", React.createElement(_components.code, null, \":vim[grep] /pattern/ {`{file}`}\"), \" will make you a pro.\"), \"\\n\", React.createElement(_components.li, null, \"Inside the VM (nested inside the PSI bridge platform), you'll have a Firefox browser available. This can only be used to review/search \", React.createElement(_components.a, {\n    href: \"https://helm.sh\"\n  }, \"https://helm.sh/\"), \", \", React.createElement(_components.a, {\n    href: \"https://kubernetes.io/docs/\"\n  }, \"Kubernetes docs\"), \" and \", React.createElement(_components.a, {\n    href: \"\"\n  }, \"Kubernetes blog\"), \" and any search results that have a domain matching these.\"), \"\\n\", React.createElement(_components.li, null, \"In addition to the mandatory pre-exam OS/Device Systems Requirements check, upon launching the PSI platform you may be prompted to update the software, and kill background processes (there were a couple of nasty ones that re-spawned even after I jumped out of my task manager). I'd used the PSI bridge for my AWS cert previously, and the first time this happened to me I'd worked up a real headache before my exam had even begun.\"), \"\\n\", React.createElement(_components.li, null, \"Clean your room the day before. Your exam proctor will ask you to pan your camera/device around the room to ensure you're in an \", React.createElement(_components.a, {\n    href: \"https://docs.linuxfoundation.org/tc-docs/certification/tips-cka-and-ckad\"\n  }, \"acceptable testing location\"), \" there are no posters, bins or clutter.\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, null, \"Set shell variables and aliases\"), \"\\n\", React.createElement(_components.p, null, \"The less keystrokes the better! Here are some of the variables and aliases I used as keyboard shortcuts:\\nNote: Linux Foundations tips for CKA and CKAD outline that some\", React.createElement(_components.a, {\n    href: \"https://kubernetes.io/docs/reference/kubectl/conventions/\"\n  }, \"conventions\"), \" such as aliases and command line tools have been pre-installed and preconfigured for your convenience. No need to set \", React.createElement(_components.code, null, \"alias k=kubectl\"), \" and Bash autocompletion.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"# Preview the object that would be sent to your cluster, without really submitting it\\nexport do=\\\"--dry-run=client -o yaml\\\" \\nk run busybox $do > busybox.yaml\\n\")), \"\\n\", React.createElement(_components.p, null, \"Force delete pods\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"export now=\\\"--force --grace-period 0\\\"\\nk delete pod busybox $now\\n\")), \"\\n\", React.createElement(_components.p, null, \"Aliases\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"alias kgp=\\\"kubectl get pods\\\"\\nalias kgn=\\\"kubectl get nodes\\\"\\n\")), \"\\n\", React.createElement(_components.h4, null, \"Weighting (pick your battles)\"), \"\\n\", React.createElement(_components.p, null, \"The exam is worth 100 points over 120 minutes.\"), \"\\n\", React.createElement(_components.h3, null, \"My approach:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Do a quick read-through of all questions noting the weighting. There's 100 points up for grabs in 120 minutes. Will this 7% task take more or less than 7-8 minutes?\"), \"\\n\", React.createElement(_components.li, null, \"As you read through, you'll no doubt find a few that you can knock over in a minute or two. I started with these. As a result, I felt confident I'd scored 30-40 points just 20 minutes into the exam.\"), \"\\n\", React.createElement(_components.li, null, \"At this stage, you should be left with those \\\"this may take a while\\\" or \\\"I'm not 100% sure how to tackle this\\\"\\ntasks. Prioritise the high-value questions, staying mindful that earning 1% every minute will get you home comfortably.\"), \"\\n\", React.createElement(_components.li, null, \"Attempt all questions, and hunt for quick wins. Points can be awarded for partially completing the task. I had a strong start, but with 20 minutes left I found myself with 3 tasks weighted 4-7% each I hadn't touched. After rolling the dice with trial and error (I felt searching docs for the perfect boilerplate may consume too many precious final minutes) - I fumbled over a 4% task for 15 minutes before skipping out of frustration. I put myself in a situation where I had just 2 minutes left to attempt the final question, where I might have been lucky to scrape 1 point out of a possible 7. Upon reflection, I would have preferred to look at all 3, looking for those quick wins. Scoring 50%, 60%, & 70% on these final 3 respectively would have been a far better outcome than my estimated 90%, 10%, 40%.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"DISCLAIMER\"), \"\\n\", React.createElement(_components.p, null, \"This post has cover how I passed the exam, what to expect, the intangibles, and tips to (hopefully) set you up for success.\\nThe real-world application of the tasks you'll encounter is debatable. IMO, passing the exam does not make you a Kubernetes expert. While you should always be learning and staying curious, the 'real-world' value of all IT certifications is debatable. I took the exam because I love challenges and learning. To quote Sam in his book \", React.createElement(\"em\", null, \"Building Microservices:\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"I want to preface this chapter by saying that I do not consider myself to be an expert in the space...I aim simply to be a conscious incompetent — in other words, I want to understand what I don't know and be aware of my limits. Even as I learn more about this space, I learn that there is still more to know.\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/olibyte.github.io/olibyte.github.io/content/posts/how-i-passed-the-cka-exam/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h3","h4","ul","li","a","strong","em","ol","code","pre","blockquote","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}